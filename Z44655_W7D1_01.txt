*&---------------------------------------------------------------------*
*& Report Z44655_W7D1_01
*&---------------------------------------------------------------------*
*& Local Class
*&---------------------------------------------------------------------*
REPORT Z44655_W7D1_01.

INTERFACE LIF_BASIC_ABILITY.
DATA GV_WORDS TYPE STRING.
METHODS SPEAK
  RETURNING VALUE(RV_WORDS) TYPE STRING.
ENDINTERFACE.

CLASS LCL_PERSON DEFINITION.

PUBLIC SECTION.

  INTERFACES LIF_BASIC_ABILITY.

  METHODS   GET_NAME
    RETURNING VALUE(RV_NAME) TYPE STRING.
  METHODS   SET_NAME
    IMPORTING
      IV_NAME TYPE STRING.

  METHODS   GET_AGE
    RETURNING VALUE(RV_AGE) TYPE INT1.
  METHODS   SET_AGE
    IMPORTING
      IV_AGE TYPE INT1.

PROTECTED SECTION.
  DATA GV_GENDER TYPE INT1.

PRIVATE SECTION.
  DATA GV_NAME   TYPE STRING.
  DATA GV_AGE    TYPE INT1.

ENDCLASS.

CLASS LCL_FEMALE DEFINITION
  INHERITING FROM LCL_PERSON.

PUBLIC SECTION.
  METHODS LIF_BASIC_ABILITY~SPEAK REDEFINITION.

  METHODS CONSTRUCTOR
    IMPORTING
      IV_AGE  TYPE INT1
      IV_NAME TYPE STRING.

  METHODS SAY_GENDER.

ENDCLASS.

CLASS LCL_MALE DEFINITION
  INHERITING FROM LCL_PERSON.

PUBLIC SECTION.
  METHODS LIF_BASIC_ABILITY~SPEAK REDEFINITION.

  METHODS CONSTRUCTOR
    IMPORTING
      IV_AGE  TYPE INT1
      IV_NAME TYPE STRING.

  METHODS SAY_GENDER.

ENDCLASS.

CLASS LCL_PERSON IMPLEMENTATION.


METHOD LIF_BASIC_ABILITY~SPEAK.
  MESSAGE 'I"m a person' TYPE 'I'.
ENDMETHOD.

METHOD SET_NAME.
  GV_NAME = IV_NAME.
ENDMETHOD.

METHOD GET_NAME.
  RV_NAME = GV_NAME.
ENDMETHOD.

METHOD SET_AGE.
  GV_AGE = IV_AGE.
ENDMETHOD.

METHOD GET_AGE.
  RV_AGE = GV_AGE.
ENDMETHOD.

ENDCLASS.

CLASS LCL_FEMALE IMPLEMENTATION.

METHOD CONSTRUCTOR.
  SUPER->CONSTRUCTOR( ).
  SET_NAME( IV_NAME ).
  SET_AGE( IV_AGE ).
*  GV_WORDS = 'I"m a Female'.
ENDMETHOD.

METHOD SAY_GENDER.
  CL_DEMO_OUTPUT=>DISPLAY( GV_GENDER ).
ENDMETHOD.

METHOD LIF_BASIC_ABILITY~SPEAK.
  MESSAGE 'I"m a Female' TYPE 'I'.
ENDMETHOD.

ENDCLASS.

CLASS LCL_MALE IMPLEMENTATION.

METHOD CONSTRUCTOR.
  SUPER->CONSTRUCTOR( ).
  SET_NAME( IV_NAME ).
  SET_AGE( IV_AGE ).
  GV_GENDER = 1.
*  GV_WORDS = 'I"m a Male'.
ENDMETHOD.

METHOD SAY_GENDER.
  CL_DEMO_OUTPUT=>DISPLAY( GV_GENDER ).
ENDMETHOD.

METHOD LIF_BASIC_ABILITY~SPEAK.
  MESSAGE 'I"m a Male' TYPE 'I'.
ENDMETHOD.

ENDCLASS.

DATA GO_PERSON TYPE REF TO LCL_PERSON.
DATA GO_PERSON2 TYPE REF TO LCL_PERSON.
DATA GO_FEMALE TYPE REF TO LCL_FEMALE.
DATA GO_MALE TYPE REF TO LCL_MALE.

INITIALIZATION.

  CREATE OBJECT GO_PERSON.
  GO_PERSON->SET_NAME( 'SEAN' ).
  GO_PERSON->SET_AGE( '17' ).

  CREATE OBJECT GO_PERSON2.
  GO_PERSON2->SET_NAME( 'SEAN1' ).
  GO_PERSON2->SET_AGE( '18' ).

  CREATE OBJECT GO_FEMALE
    EXPORTING
      IV_AGE  = 21
      IV_NAME = 'SEAN3'.

  CREATE OBJECT GO_MALE
    EXPORTING
      IV_AGE  = 22
      IV_NAME = 'SEAN4'.

START-OF-SELECTION.
*  CL_DEMO_OUTPUT=>DISPLAY( GO_PERSON->GET_NAME( ) ).
*  CL_DEMO_OUTPUT=>DISPLAY( GO_PERSON->GET_AGE( ) ).
*
*  CL_DEMO_OUTPUT=>DISPLAY( GO_PERSON2->GET_NAME( ) ).
*  CL_DEMO_OUTPUT=>DISPLAY( GO_PERSON2->GET_AGE( ) ).

*  CL_DEMO_OUTPUT=>DISPLAY( GO_FEMALE->GET_NAME( ) ).
*  CL_DEMO_OUTPUT=>DISPLAY( GO_FEMALE->GET_AGE( ) ).

*  CL_DEMO_OUTPUT=>DISPLAY( GO_MALE->GET_NAME( ) ).
*  CL_DEMO_OUTPUT=>DISPLAY( GO_MALE->GET_AGE( ) ).

*  GO_FEMALE->SAY_GENDER( ).
*  GO_MALE->SAY_GENDER( ).

  GO_FEMALE->LIF_BASIC_ABILITY~SPEAK( ).
  GO_MALE->LIF_BASIC_ABILITY~SPEAK( ).
