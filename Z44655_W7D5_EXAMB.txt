*&---------------------------------------------------------------------*
*& Report Z44655_W7D5_EXAMB
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z44655_W7D5_EXAMB.

TABLES: BKPF,
        BSIK.

PARAMETERS: P_BUKRS TYPE BKPF-BUKRS OBLIGATORY DEFAULT '1710',
            P_GJAHR TYPE BKPF-GJAHR OBLIGATORY DEFAULT '2021'.

SELECT-OPTIONS: S_LDGRP FOR BKPF-LDGRP NO INTERVALS NO-EXTENSION,
                S_BUDAT FOR BKPF-BUDAT,
                S_CPUDT FOR BKPF-CPUDT,
                S_BLART FOR BKPF-BLART,
                S_BELNR FOR BKPF-BELNR,
                S_USNAM FOR BKPF-USNAM,
                S_LIFNR FOR BSIK-LIFNR.

CLASS LCL_PROG DEFINITION
  CREATE PRIVATE.

  PUBLIC SECTION.

    TYPES: TS_BKPF TYPE ZSAV_ALVBKPF_44655,
           TT_BKPF TYPE STANDARD TABLE OF TS_BKPF.

    TYPES: TS_BSIK TYPE ZSAV_ALVBSIK_44655,
           TT_BSIK TYPE STANDARD TABLE OF TS_BSIK.

    TYPES: TS_BSAK TYPE ZSAV_ALVBSAK_44655,
           TT_BSAK TYPE STANDARD TABLE OF TS_BSAK.

    DATA GV_IS_FIRST_CALL TYPE ABAP_BOOL VALUE ABAP_TRUE.
    DATA GV_IS_FIRST_CALL2 TYPE ABAP_BOOL VALUE ABAP_TRUE.

    DATA: GT_BKPF TYPE TT_BKPF,
          GS_BKPF TYPE TS_BKPF.

    DATA: GT_BSIK TYPE TT_BSIK,
          GS_BSIK TYPE TS_BSIK.

    DATA: GT_BSAK TYPE TT_BSAK,
          GS_BSAK TYPE TS_BSAK.

    DATA GV_BELNR TYPE BELNR_D.

    METHODS INITIALIZATION.
    METHODS AT_SELECTION_SCREEN.
    METHODS GET_DATA_BKPF.
    METHODS GET_DATA_BSIK.
    METHODS GET_DATA_BSAK.

    METHODS GET_FCAT
      IMPORTING
        IV_TABNAME     TYPE TABNAME
      RETURNING
        VALUE(RV_FCAT) TYPE LVC_T_FCAT.

    METHODS GET_LAYOUT
      IMPORTING
        IV_BOX_NAME      TYPE C OPTIONAL
        IV_STYLE_TAB     TYPE C OPTIONAL
        IV_COLOR_TAB     TYPE C OPTIONAL
        IV_TITLE         TYPE C OPTIONAL
      RETURNING
        VALUE(RO_LAYOUT) TYPE LVC_S_LAYO.

    METHODS GET_CONTAINER
      IMPORTING
        IV_NAME             TYPE C
      RETURNING
        VALUE(RO_CONTAINER) TYPE REF TO CL_GUI_CUSTOM_CONTAINER.

    METHODS GET_ALV
      IMPORTING
        IO_CONTAINER  TYPE REF TO CL_GUI_CUSTOM_CONTAINER
      RETURNING
        VALUE(RO_ALV) TYPE REF TO CL_GUI_ALV_GRID.

    METHODS SHOW_ALV_BKPF.

    METHODS SHOW_ALV_BSIK
      RETURNING
        VALUE(RO_CON) TYPE REF TO CL_GUI_CUSTOM_CONTAINER.
*
    METHODS SHOW_ALV_BSAK
      RETURNING
        VALUE(RO_CON) TYPE REF TO CL_GUI_CUSTOM_CONTAINER.

    METHODS MAIN.

    CLASS-METHODS GET_INSTANCE
      RETURNING VALUE(RO_INSTANCE) TYPE REF TO LCL_PROG.

  PROTECTED SECTION.

  PRIVATE SECTION.

    METHODS CONSTRUCTOR.

    CLASS-DATA GO_INSTANCE TYPE REF TO LCL_PROG.

ENDCLASS.

CLASS LCL_ALV_EVENT_SCARR DEFINITION.

  PUBLIC SECTION.

    METHODS CONSTRUCTOR
      IMPORTING
        IO_GRID TYPE REF TO CL_GUI_ALV_GRID.

    METHODS ON_HOTSPOT_CLICK
      FOR EVENT HOTSPOT_CLICK OF CL_GUI_ALV_GRID
      IMPORTING
        E_ROW_ID
        E_COLUMN_ID
        ES_ROW_NO.

    METHODS ON_DOUBLE_CLICK
      FOR EVENT DOUBLE_CLICK OF CL_GUI_ALV_GRID
      IMPORTING
        E_ROW
        E_COLUMN
        ES_ROW_NO.

  PRIVATE SECTION.
    DATA GO_GRID TYPE REF TO CL_GUI_ALV_GRID.

ENDCLASS.

INITIALIZATION.

  DATA GO_PROG TYPE REF TO LCL_PROG.
  GO_PROG = LCL_PROG=>GET_INSTANCE( ).
  GO_PROG->INITIALIZATION( ).

AT SELECTION-SCREEN.

  GO_PROG->AT_SELECTION_SCREEN( ).

START-OF-SELECTION.
  GO_PROG->MAIN( ).

CLASS LCL_PROG IMPLEMENTATION.

  METHOD CONSTRUCTOR.

  ENDMETHOD.

  METHOD INITIALIZATION.

    DATA LS_BUDAT LIKE LINE OF S_BUDAT.
    LS_BUDAT-SIGN   = 'I'.
    LS_BUDAT-OPTION = 'BT'.
    LS_BUDAT-LOW    = '20210101'.
    LS_BUDAT-HIGH   = SY-DATUM.
    APPEND LS_BUDAT TO S_BUDAT.

  ENDMETHOD.

  METHOD AT_SELECTION_SCREEN.

    DATA LV_BUKRS TYPE BKPF-BUKRS.
    SELECT SINGLE BUKRS
      FROM T001
      INTO LV_BUKRS
    WHERE BUKRS = P_BUKRS.
    IF SY-SUBRC <> 0.
      MESSAGE 'Data not found!' TYPE 'E'.
    ENDIF.

  ENDMETHOD.

  METHOD GET_DATA_BKPF.

    SELECT *
      FROM ZV2ALV_W7D5_44655( P_BUKRS = @P_BUKRS,
                              P_GJAHR = @P_GJAHR )
      INTO CORRESPONDING FIELDS OF TABLE @GT_BKPF
     WHERE LDGRP IN @S_LDGRP
       AND BUDAT IN @S_BUDAT
       AND CPUDT IN @S_CPUDT
       AND BLART IN @S_BLART
       AND BELNR IN @S_BELNR
       AND USNAM IN @S_USNAM.
    IF SY-SUBRC <> 0.
      MESSAGE 'No Data BKPF Found' TYPE 'E'.
    ELSE.
      SORT GT_BKPF.
    ENDIF.

  ENDMETHOD.

  METHOD GET_DATA_BSIK.

    SELECT *
      FROM ZV2ALV1_W7D5_44655
     INTO CORRESPONDING FIELDS OF TABLE @GT_BSIK
    WHERE BELNR = @GO_PROG->GV_BELNR
      AND BUKRS = @P_BUKRS
      AND GJAHR = @P_GJAHR
      AND LIFNR IN @S_LIFNR.
    IF SY-SUBRC <> 0.
      MESSAGE 'No Data BSIK Found' TYPE 'S' DISPLAY LIKE 'E'.
    ELSE.
      SORT GT_BSIK.
    ENDIF.

  ENDMETHOD.

  METHOD GET_DATA_BSAK.

    SELECT *
      FROM ZV2ALV2_W7D5_44655
     INTO CORRESPONDING FIELDS OF TABLE @GT_BSAK
    WHERE BELNR = @GO_PROG->GV_BELNR
      AND BUKRS = @P_BUKRS
      AND GJAHR = @P_GJAHR
      AND LIFNR IN @S_LIFNR.
    IF SY-SUBRC <> 0.
      MESSAGE 'No Data BSAK Found' TYPE 'S' DISPLAY LIKE 'E'.
    ELSE.
      SORT GT_BSAK.
    ENDIF.

  ENDMETHOD.

  METHOD GET_FCAT.

    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME       = IV_TABNAME
      CHANGING
        CT_FIELDCAT            = RV_FCAT
      EXCEPTIONS
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        OTHERS                 = 3.
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.

  ENDMETHOD.

  METHOD GET_LAYOUT.

    RO_LAYOUT-CWIDTH_OPT = ABAP_TRUE.
    RO_LAYOUT-ZEBRA      = ABAP_TRUE.
    RO_LAYOUT-BOX_FNAME  = IV_BOX_NAME.
    RO_LAYOUT-STYLEFNAME = IV_STYLE_TAB.
    RO_LAYOUT-CTAB_FNAME = IV_COLOR_TAB.
    RO_LAYOUT-GRID_TITLE = IV_TITLE.

  ENDMETHOD.

  METHOD GET_CONTAINER.

    CREATE OBJECT RO_CONTAINER
      EXPORTING
        CONTAINER_NAME = IV_NAME.

  ENDMETHOD.

  METHOD GET_ALV.

    CREATE OBJECT RO_ALV
      EXPORTING
        I_PARENT = IO_CONTAINER.

  ENDMETHOD.

  METHOD SHOW_ALV_BKPF.

    GET_DATA_BKPF( ).

    DATA LO_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER.
    DATA LO_GRID TYPE REF TO CL_GUI_ALV_GRID.

    LO_CONTAINER = GET_CONTAINER( 'BKPF' ).
    LO_GRID      = GET_ALV( LO_CONTAINER ).

    DATA LO_EVENT TYPE REF TO LCL_ALV_EVENT_SCARR.
    CREATE OBJECT LO_EVENT
      EXPORTING
        IO_GRID = LO_GRID.

    SET HANDLER LO_EVENT->ON_HOTSPOT_CLICK FOR LO_GRID.
    SET HANDLER LO_EVENT->ON_DOUBLE_CLICK FOR LO_GRID.

    DATA LT_FCAT TYPE LVC_T_FCAT.
    LT_FCAT = GET_FCAT( 'ZSAV_ALVBKPF_44655' ).

    LT_FCAT[ FIELDNAME = 'BELNR' ]-HOTSPOT = ABAP_TRUE.

    CALL METHOD LO_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_SAVE                        = 'A'
        I_DEFAULT                     = 'X'
        IS_LAYOUT                     = GET_LAYOUT( IV_TITLE = TEXT-003 )
      CHANGING
        IT_OUTTAB                     = GT_BKPF
        IT_FIELDCATALOG               = LT_FCAT
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
*     Implement suitable error handling here
    ENDIF.


  ENDMETHOD.

  METHOD SHOW_ALV_BSIK.

    GET_DATA_BSIK( ).

    DATA LO_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER.
    DATA LO_GRID TYPE REF TO CL_GUI_ALV_GRID.

    LO_CONTAINER = GET_CONTAINER( 'BSIK' ).
    LO_GRID      = GET_ALV( LO_CONTAINER ).

    DATA LO_EVENT TYPE REF TO LCL_ALV_EVENT_SCARR.
    CREATE OBJECT LO_EVENT
      EXPORTING
        IO_GRID = LO_GRID.

    SET HANDLER LO_EVENT->ON_DOUBLE_CLICK FOR LO_GRID.

    DATA LT_FCAT TYPE LVC_T_FCAT.
    LT_FCAT = GET_FCAT( 'ZSAV_ALVBSIK_44655' ).

    CALL METHOD LO_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_SAVE                        = 'A'
        I_DEFAULT                     = 'X'
        IS_LAYOUT                     = GET_LAYOUT( IV_TITLE = TEXT-004 )
      CHANGING
        IT_OUTTAB                     = GT_BSIK
        IT_FIELDCATALOG               = LT_FCAT
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
*     Implement suitable error handling here
    ENDIF.

    RO_CON = LO_CONTAINER.

  ENDMETHOD.

  METHOD SHOW_ALV_BSAK.

    GET_DATA_BSAK( ).

    DATA LO_CONTAINER TYPE REF TO CL_GUI_CUSTOM_CONTAINER.
    DATA LO_GRID TYPE REF TO CL_GUI_ALV_GRID.

    LO_CONTAINER = GET_CONTAINER( 'BSAK' ).
    LO_GRID      = GET_ALV( LO_CONTAINER ).

    DATA LO_EVENT TYPE REF TO LCL_ALV_EVENT_SCARR.
    CREATE OBJECT LO_EVENT
      EXPORTING
        IO_GRID = LO_GRID.

    SET HANDLER LO_EVENT->ON_DOUBLE_CLICK FOR LO_GRID.

    DATA LT_FCAT TYPE LVC_T_FCAT.
    LT_FCAT = GET_FCAT( 'ZSAV_ALVBSAK_44655' ).

    CALL METHOD LO_GRID->SET_TABLE_FOR_FIRST_DISPLAY
      EXPORTING
        I_SAVE                        = 'A'
        I_DEFAULT                     = 'X'
        IS_LAYOUT                     = GET_LAYOUT( IV_TITLE = TEXT-005 )
      CHANGING
        IT_OUTTAB                     = GT_BSAK
        IT_FIELDCATALOG               = LT_FCAT
      EXCEPTIONS
        INVALID_PARAMETER_COMBINATION = 1
        PROGRAM_ERROR                 = 2
        TOO_MANY_LINES                = 3
        OTHERS                        = 4.
    IF SY-SUBRC <> 0.
*     Implement suitable error handling here
    ENDIF.

    RO_CON = LO_CONTAINER.

  ENDMETHOD.

  METHOD MAIN.

    CALL SCREEN 9000.

  ENDMETHOD.

  METHOD GET_INSTANCE.

    IF GO_INSTANCE IS NOT BOUND.
      CREATE OBJECT GO_INSTANCE.
    ENDIF.
    RO_INSTANCE = GO_INSTANCE.

  ENDMETHOD.

ENDCLASS.

*&---------------------------------------------------------------------*
*& Module STATUS_9000 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE STATUS_9000 OUTPUT.
  SET PF-STATUS SY-DYNNR.
  SET TITLEBAR SY-DYNNR WITH TEXT-001.

  IF GO_PROG->GV_IS_FIRST_CALL = ABAP_TRUE.

    GO_PROG->SHOW_ALV_BKPF( ).

    GO_PROG->GV_IS_FIRST_CALL = ABAP_FALSE.

  ENDIF.

ENDMODULE.

*&---------------------------------------------------------------------*
*&      Module  ON_EXIT_9000  INPUT
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
MODULE ON_EXIT_9000 INPUT.

  CASE SY-UCOMM.
    WHEN '&ZBACK' OR '&ZEXIT'.
      GO_PROG->GV_IS_FIRST_CALL2 = ABAP_TRUE.
      LEAVE TO SCREEN 0.
    WHEN '&ZEND'.
      LEAVE PROGRAM.
    WHEN OTHERS.
  ENDCASE.

ENDMODULE.

*&---------------------------------------------------------------------*
*& Module STATUS_9001 OUTPUT
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
MODULE STATUS_9001 OUTPUT.

  DATA LV_TITLE TYPE STRING.
  LV_TITLE = TEXT-002 && GO_PROG->GV_BELNR.
  SET PF-STATUS '9001'.
  SET TITLEBAR '9001' WITH LV_TITLE.

  IF GO_PROG->GV_IS_FIRST_CALL2 = ABAP_TRUE.

    DATA(GO_CON1) = GO_PROG->SHOW_ALV_BSIK( ).
    DATA(GO_CON2) = GO_PROG->SHOW_ALV_BSAK( ).

    GO_PROG->GV_IS_FIRST_CALL2 = ABAP_FALSE.

  ENDIF.

ENDMODULE.

CLASS LCL_ALV_EVENT_SCARR IMPLEMENTATION.

  METHOD CONSTRUCTOR.
    GO_GRID = IO_GRID.
  ENDMETHOD.

  METHOD ON_HOTSPOT_CLICK.

    CASE E_COLUMN_ID-FIELDNAME.
      WHEN 'BELNR'.
        READ TABLE GO_PROG->GT_BKPF INTO GO_PROG->GS_BKPF INDEX ES_ROW_NO-ROW_ID.
        IF SY-SUBRC = 0.
          SET PARAMETER ID 'BLN' FIELD GO_PROG->GS_BKPF-BELNR.
          SET PARAMETER ID 'BUK' FIELD P_BUKRS.
          SET PARAMETER ID 'GJR' FIELD P_GJAHR.
          CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
        ENDIF.
      WHEN OTHERS.
    ENDCASE.

  ENDMETHOD.

  METHOD ON_DOUBLE_CLICK.

    READ TABLE GO_PROG->GT_BKPF INTO GO_PROG->GS_BKPF INDEX ES_ROW_NO-ROW_ID.
    IF SY-SUBRC = 0.

      GO_PROG->GV_BELNR = GO_PROG->GS_BKPF-BELNR.
      CALL SCREEN '9001'.

    ENDIF.

    GO_CON1->FREE( ).
    GO_CON2->FREE( ).

    DATA LS_POSITION TYPE LVC_S_STBL.
    LS_POSITION-ROW = ABAP_TRUE.
    LS_POSITION-COL = ABAP_TRUE.
    GO_GRID->REFRESH_TABLE_DISPLAY( IS_STABLE = LS_POSITION ).

  ENDMETHOD.

ENDCLASS.

*&SPWizard: Data incl. inserted by SP Wizard. DO NOT CHANGE THIS LINE!
INCLUDE Z44655_W7D5_EXAMB_TAB1 .
