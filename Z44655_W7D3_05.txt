*&---------------------------------------------------------------------*
*& Report Z44655_W7D3_05
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z44655_W7D3_05.

CLASS LCL_PROG DEFINITION
  CREATE PRIVATE.

  PUBLIC SECTION.
    METHODS INITIALIZATION.
    METHODS AT_SELECTION_SCREEN.
    METHODS MAIN.
*    METHODS SET_PF_STATUS.
*    METHODS USER_COMMAND.
    CLASS-METHODS GET_INSTANCE
      RETURNING VALUE(RV_INSTANCE) TYPE REF TO LCL_PROG.

    CLASS-DATA GT_SCARR TYPE STANDARD TABLE OF SCARR.
    CLASS-DATA GS_SCARR TYPE SCARR.
    CLASS-DATA GT_SFLIGHT TYPE STANDARD TABLE OF SFLIGHT.
    CLASS-DATA GS_SFLIGHT TYPE SFLIGHT.

  PROTECTED SECTION.

  PRIVATE SECTION.
    METHODS CONSTRUCTOR.

    CLASS-DATA GO_INSTANCE TYPE REF TO LCL_PROG.

ENDCLASS.

CLASS LCL_PROG IMPLEMENTATION.

  METHOD CONSTRUCTOR.

  ENDMETHOD.

  METHOD INITIALIZATION.

  ENDMETHOD.

  METHOD AT_SELECTION_SCREEN.

  ENDMETHOD.

  METHOD MAIN.

    SELECT *
      FROM SCARR
     INTO TABLE GT_SCARR.

    DATA LT_FCAT TYPE LVC_T_FCAT.
    CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
      EXPORTING
        I_STRUCTURE_NAME       = 'SCARR'
      CHANGING
        CT_FIELDCAT            = LT_FCAT
      EXCEPTIONS
        INCONSISTENT_INTERFACE = 1
        PROGRAM_ERROR          = 2
        OTHERS                 = 3.
    IF SY-SUBRC <> 0.
* Implement suitable error handling here
    ENDIF.

    DATA LS_LAYOUT TYPE LVC_S_LAYO.
    LS_LAYOUT-ZEBRA       = ABAP_TRUE.
    LS_LAYOUT-CWIDTH_OPT  = ABAP_TRUE.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
      EXPORTING
        I_CALLBACK_PROGRAM       = SY-REPID
        I_CALLBACK_PF_STATUS_SET = 'FRM_SET_PF_STATUS'
        I_CALLBACK_USER_COMMAND  = 'FRM_USER_COMMAND'
        IS_LAYOUT_LVC   = LS_LAYOUT
        IT_FIELDCAT_LVC = LT_FCAT
        I_GRID_TITLE    = 'Table SCARR'
      TABLES
        T_OUTTAB        = GT_SCARR
      EXCEPTIONS
        PROGRAM_ERROR   = 1
        OTHERS          = 2.
    IF SY-SUBRC <> 0.
      " Implement suitable error handling here
    ENDIF.


  ENDMETHOD.

  METHOD GET_INSTANCE.
    IF GO_INSTANCE IS NOT BOUND.
      CREATE OBJECT GO_INSTANCE.
    ENDIF.
    RV_INSTANCE = GO_INSTANCE.
  ENDMETHOD.

*  METHOD SET_PF_STATUS.
*    SET PF-STATUS 'STANDARD_FULLSCREEN'.
*  ENDMETHOD.

*  METHOD USER_COMMAND.
*    SET PF-STATUS 'STANDARD_FULLSCREEN'.
*  ENDMETHOD.

ENDCLASS.

INITIALIZATION.

  DATA GO_PROG TYPE REF TO LCL_PROG.
  GO_PROG = LCL_PROG=>GET_INSTANCE( ).
  GO_PROG->INITIALIZATION( ).

AT SELECTION-SCREEN.

  GO_PROG->AT_SELECTION_SCREEN( ).

START-OF-SELECTION.
  GO_PROG->MAIN( ).

FORM FRM_SET_PF_STATUS CHANGING PV_EXCL_TAB TYPE KKBLO_T_EXTAB.

  SET PF-STATUS 'STANDARD_FULLSCREEN'.

ENDFORM.

FORM FRM_USER_COMMAND USING PV_UCOMM       LIKE SY-UCOMM
                            PS_FIELD_INFO  TYPE SLIS_SELFIELD.

  CASE PV_UCOMM.
    WHEN '&IC1'.
      READ TABLE LCL_PROG=>GT_SCARR INTO LCL_PROG=>GS_SCARR INDEX PS_FIELD_INFO-TABINDEX.

      SELECT *
        FROM SFLIGHT
       INTO TABLE LCL_PROG=>GT_SFLIGHT
      WHERE CARRID = LCL_PROG=>GS_SCARR-CARRID.

      DATA LT_FCAT TYPE LVC_T_FCAT.
      CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
        EXPORTING
          I_STRUCTURE_NAME       = 'SFLIGHT'
        CHANGING
          CT_FIELDCAT            = LT_FCAT
        EXCEPTIONS
          INCONSISTENT_INTERFACE = 1
          PROGRAM_ERROR          = 2
        OTHERS                 = 3.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

      DATA LS_LAYOUT TYPE LVC_S_LAYO.
      LS_LAYOUT-ZEBRA       = ABAP_TRUE.
      LS_LAYOUT-CWIDTH_OPT  = ABAP_TRUE.

      CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
        EXPORTING
          IS_LAYOUT_LVC            = LS_LAYOUT
          IT_FIELDCAT_LVC          = LT_FCAT
          I_GRID_TITLE             = 'Table SFLIGHT'
        TABLES
          T_OUTTAB                 = LCL_PROG=>GT_SFLIGHT
        EXCEPTIONS
          PROGRAM_ERROR            = 1
        OTHERS                   = 2.
      IF SY-SUBRC <> 0.
      " Implement suitable error handling here
      ENDIF.
    WHEN '&ZDETAIL'.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.
