*&---------------------------------------------------------------------*
*& Report Z44655_W4D5_EXAMA
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z44655_W4D5_EXAMA.

TABLES: VBAK,
        VBAP.

SELECT-OPTIONS: S_AUDAT FOR VBAK-AUDAT OBLIGATORY.
SELECT-OPTIONS: S_VKORG FOR VBAK-VKORG OBLIGATORY.
SELECT-OPTIONS: S_VBELN FOR VBAK-VBELN.
SELECT-OPTIONS: S_MATNR FOR VBAP-MATNR.

DATA GT_HEADER TYPE STANDARD TABLE OF ZSSO_HEADER_44655.
DATA GS_HEADER TYPE ZSSO_HEADER_44655.
DATA GT_SODOC TYPE ZTTSO_SODOC_44655.

INITIALIZATION.

  PERFORM FRM_SET_DEFAULT_VALUE.

AT SELECTION-SCREEN.

  PERFORM FRM_CHECK_EXISTENCE USING S_VKORG.

START-OF-SELECTION.

  PERFORM FRM_GET_DATA.

  PERFORM FRM_SHOW_ALV.

FORM FRM_SET_DEFAULT_VALUE.

  DATA LS_AUDAT LIKE LINE OF S_AUDAT.
  LS_AUDAT-SIGN   = 'I'.
  LS_AUDAT-OPTION = 'BT'.
  LS_AUDAT-LOW    = '20220101'.
  LS_AUDAT-HIGH   = SY-DATUM.
  APPEND LS_AUDAT TO S_AUDAT.

  DATA LS_VKORG LIKE LINE OF S_VKORG.
  LS_VKORG-SIGN   = 'I'.
  LS_VKORG-OPTION = 'EQ'.
  LS_VKORG-LOW    = '1710'.
  LS_VKORG-HIGH   = ''.
  APPEND LS_VKORG TO S_VKORG.

ENDFORM.

FORM FRM_CHECK_EXISTENCE USING SV_VKORG.

  DATA LV_VKORG TYPE VBAK-VKORG.
  SELECT SINGLE VKORG
    FROM TVKO
    INTO LV_VKORG
  WHERE VKORG = S_VKORG-LOW.
  IF SY-SUBRC <> 0.
    MESSAGE 'Data not found!' TYPE 'E'.
  ENDIF.

ENDFORM.

FORM FRM_GET_DATA.

  SELECT VBAK~VBELN
         VBAK~VKORG
         VBAK~KUNNR
         VBAK~AUDAT
         VBAK~NETWR
         VBAK~WAERK
    FROM VBAK
   INNER JOIN VBAP
      ON VBAP~VBELN = VBAK~VBELN
    INTO CORRESPONDING FIELDS OF TABLE GT_HEADER
   WHERE VBAK~AUDAT IN S_AUDAT
     AND VBAK~VKORG IN S_VKORG
     AND VBAK~VBELN IN S_VBELN
     AND VBAP~MATNR IN S_MATNR.
  IF SY-SUBRC <> 0.
    MESSAGE 'NO DATA FOUND!' TYPE 'E'.
  ENDIF.

  SELECT VBELN
         POSNR
         MATNR
         ARKTX
         KWMENG
         VRKME
         NETWR
         WAERK
    FROM VBAP
    INTO CORRESPONDING FIELDS OF TABLE GT_SODOC
    FOR ALL ENTRIES IN GT_HEADER
   WHERE VBELN = GT_HEADER-VBELN.

  DATA LT_TVKOT TYPE STANDARD TABLE OF TVKOT.
  SELECT *
    FROM TVKOT
    INTO CORRESPONDING FIELDS OF TABLE LT_TVKOT
     FOR ALL ENTRIES IN GT_HEADER
   WHERE TVKOT~VKORG = GT_HEADER-VKORG
  AND TVKOT~SPRAS = SY-LANGU.
  IF SY-SUBRC = 0.
    SORT LT_TVKOT BY VKORG.
  ENDIF.

  DATA LT_KNA1 TYPE STANDARD TABLE OF KNA1.
  SELECT NAME1
         KUNNR
    FROM KNA1
    INTO CORRESPONDING FIELDS OF TABLE LT_KNA1
     FOR ALL ENTRIES IN GT_HEADER
  WHERE KNA1~KUNNR = GT_HEADER-KUNNR.
  IF SY-SUBRC = 0.
    SORT LT_KNA1 BY KUNNR.
  ENDIF.
*
  DATA LS_TVKOT LIKE LINE OF LT_TVKOT.
  DATA LS_KNA1 LIKE LINE OF LT_KNA1.

  LOOP AT GT_HEADER INTO GS_HEADER.

    READ TABLE LT_TVKOT INTO LS_TVKOT WITH KEY VKORG = GS_HEADER-VKORG
                                      BINARY SEARCH.
    IF SY-SUBRC = 0.
      GS_HEADER-VTEXT = LS_TVKOT-VTEXT.
      CLEAR LS_TVKOT.
    ENDIF.

    READ TABLE LT_KNA1 INTO LS_KNA1 WITH KEY KUNNR = GS_HEADER-KUNNR
                                    BINARY SEARCH.
    IF SY-SUBRC = 0.
      GS_HEADER-NAME1 = LS_KNA1-NAME1.
      CLEAR LS_KNA1.
    ENDIF.

    MODIFY GT_HEADER FROM GS_HEADER.

  ENDLOOP.

ENDFORM.

FORM FRM_SHOW_ALV .

  DATA GT_FCAT TYPE LVC_T_FCAT.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME       = 'ZSSO_HEADER_44655'
    CHANGING
      CT_FIELDCAT            = GT_FCAT
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      OTHERS                 = 3.
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

  DATA GS_LAYOUT TYPE LVC_S_LAYO.
  GS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.
  GS_LAYOUT-ZEBRA      = ABAP_TRUE.
  GS_LAYOUT-BOX_FNAME = 'ZBOX'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      I_CALLBACK_PROGRAM       = SY-REPID
      I_GRID_TITLE             = 'Sales Order List for [Sean Akbar Ryanto]'
      I_CALLBACK_PF_STATUS_SET = 'FRM_SET_PF_STATUS'
      I_CALLBACK_USER_COMMAND  = 'FRM_USER_COMMAND'
      IS_LAYOUT_LVC            = GS_LAYOUT
      IT_FIELDCAT_LVC          = GT_FCAT
    TABLES
      T_OUTTAB                 = GT_HEADER
    EXCEPTIONS
      PROGRAM_ERROR            = 1
      OTHERS                   = 2.
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

ENDFORM.

FORM FRM_SET_PF_STATUS USING PV_EXCL_TAB TYPE KKBLO_T_EXTAB.
  SET PF-STATUS 'STANDARD_FULLSCREEN'.
ENDFORM.

FORM FRM_USER_COMMAND  USING PV_UCOMM       LIKE SY-UCOMM
                             PS_FIELD_INFO  TYPE SLIS_SELFIELD.

  CASE PV_UCOMM.
    WHEN '&ZPRINT'.
      DATA LS_CONTROL_PARAMETERS TYPE SSFCTRLOP.
      LS_CONTROL_PARAMETERS-NO_DIALOG = ABAP_TRUE.
      LS_CONTROL_PARAMETERS-PREVIEW   = ABAP_TRUE.
      LS_CONTROL_PARAMETERS-NO_OPEN = ABAP_TRUE.
      LS_CONTROL_PARAMETERS-NO_CLOSE = ABAP_TRUE.

      DATA LS_OUTPUT_OPTIONS TYPE SSFCOMPOP.

      DATA LS_JOB_OUTPUT_INFO TYPE SSFCRESCL.

      DATA GV_FORMNAME TYPE TDSFNAME.
      GV_FORMNAME = 'ZSF_44655_EXAMA'.

      DATA GV_FNAME TYPE RS38L_FNAM.
      CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
        EXPORTING
          FORMNAME           = GV_FORMNAME
        IMPORTING
          FM_NAME            = GV_FNAME
        EXCEPTIONS
          NO_FORM            = 1
          NO_FUNCTION_MODULE = 2
          OTHERS             = 3.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

      DATA LS_HEADER LIKE LINE OF GT_HEADER.
      DATA LS_SODOC LIKE LINE OF GT_SODOC.

      DATA LT_SF_SODOC TYPE ZTTSO_SODOC_44655.
      DATA LS_SF_SODOC LIKE LINE OF LT_SF_SODOC.

*      DATA LS_SF_HEADER TYPE ZSSO_HEADER_44655.

      CALL FUNCTION 'SSF_OPEN'
       EXPORTING
         OUTPUT_OPTIONS           = LS_OUTPUT_OPTIONS
         CONTROL_PARAMETERS       = LS_CONTROL_PARAMETERS
       EXCEPTIONS
         FORMATTING_ERROR         = 1
         INTERNAL_ERROR           = 2
         SEND_ERROR               = 3
         USER_CANCELED            = 4
         OTHERS                   = 5
                .
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

      LOOP AT GT_HEADER INTO LS_HEADER WHERE ZBOX = ABAP_TRUE.

*        LS_SF_HEADER-VBELN = LS_HEADER-VBELN.

        LOOP AT GT_SODOC INTO LS_SODOC WHERE VBELN = LS_HEADER-VBELN.
          MOVE-CORRESPONDING LS_SODOC TO LS_SF_SODOC.
          LS_SF_SODOC-VBELN = LS_HEADER-VBELN.

          APPEND LS_SF_SODOC TO LT_SF_SODOC.

        ENDLOOP.

        CALL FUNCTION GV_FNAME
          EXPORTING
            CONTROL_PARAMETERS = LS_CONTROL_PARAMETERS
            USER_SETTINGS      = 'X'
            IS_HEADER          = LS_HEADER
          IMPORTING
            JOB_OUTPUT_INFO    = LS_JOB_OUTPUT_INFO
          TABLES
            IT_SODOC           = LT_SF_SODOC
          EXCEPTIONS
            FORMATTING_ERROR   = 1
            INTERNAL_ERROR     = 2
            SEND_ERROR         = 3
            USER_CANCELED      = 4
            OTHERS             = 5.
        IF SY-SUBRC <> 0.
* Implement suitable error handling here
        ENDIF.

      ENDLOOP.

      CLEAR LS_HEADER.
      CLEAR LT_SF_SODOC.

      CALL FUNCTION 'SSF_CLOSE'
       IMPORTING
         JOB_OUTPUT_INFO        = LS_JOB_OUTPUT_INFO
       EXCEPTIONS
         FORMATTING_ERROR       = 1
         INTERNAL_ERROR         = 2
         SEND_ERROR             = 3
         OTHERS                 = 4
                .
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

    WHEN OTHERS.
  ENDCASE.

ENDFORM.
