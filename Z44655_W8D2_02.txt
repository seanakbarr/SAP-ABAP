*&---------------------------------------------------------------------*
*& Report Z44655_W8D2_02
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z44655_W8D2_02.

CLASS LCL_PROG DEFINITION
  CREATE PRIVATE.

  PUBLIC SECTION.
    TYPES: BEGIN OF TS_SCARR.
             INCLUDE TYPE SCARR.
    TYPES:   COLOR TYPE LVC_T_SCOL,
             STYLE TYPE LVC_T_STYL,
           END OF TS_SCARR.

    TYPES TT_SCARR TYPE STANDARD TABLE OF TS_SCARR.

    CLASS-METHODS GET_INSTANCE
      RETURNING
        VALUE(RO_INSTANCE) TYPE REF TO LCL_PROG.

    METHODS SET_COLOR.
    METHODS SET_HOTSPOT.

    METHODS MAIN.

  PRIVATE SECTION.
    METHODS CONSTRUCTOR.
    CLASS-DATA GO_INSTANCE TYPE REF TO LCL_PROG.

    DATA: GT_SCARR TYPE TT_SCARR,
          GS_SCARR TYPE TS_SCARR.

    DATA GO_SCARR TYPE REF TO ZHDCL_HALV_PARENT.

ENDCLASS.

CLASS LCL_HALV_EVENT_SCARR DEFINITION
  INHERITING FROM ZHDCL_HALV_EVENT_HANDLER.


ENDCLASS.

START-OF-SELECTION.
  LCL_PROG=>GET_INSTANCE( )->MAIN( ).

CLASS LCL_PROG IMPLEMENTATION.

  METHOD CONSTRUCTOR.
    SELECT * FROM SCARR INTO CORRESPONDING FIELDS OF TABLE GT_SCARR.
      IF SY-SUBRC = 0.
        GO_SCARR = ZHDCL_HALV_FACTORY=>GET_HALV( VALUE #( TYPE = 'HALV'
                                                          BIND_ITAB = ABAP_TRUE
                                                          COLOR_TABLE_NAME = 'COLOR'
                                                          STYLE_TABLE_NAME = 'STYLE' ) ).
        GO_SCARR->BIND( CHANGING ITAB = GT_SCARR ).
        SET_COLOR( ).
      ELSE.
        MESSAGE TEXT-E01 TYPE 'E'.
      ENDIF.
  ENDMETHOD.

  METHOD GET_INSTANCE.
    IF GO_INSTANCE IS NOT BOUND.
      CREATE OBJECT GO_INSTANCE.
    ENDIF.
    RO_INSTANCE = GO_INSTANCE.
  ENDMETHOD.

  METHOD SET_COLOR.

  DATA LS_CELL_COLOR TYPE LVC_S_SCOL.

  FIELD-SYMBOLS <TABLE> TYPE TT_SCARR.
  ASSIGN GT_SCARR TO <TABLE>.

*    Clear it before setting the style color to prevent incorrect application if it is set elsewhere.
  GO_SCARR->CLEAR_LINE_COLOR_TABLE( ).

  LOOP AT <TABLE> ASSIGNING FIELD-SYMBOL(<POINTER>).

    DATA(INDEX) = SY-TABIX.
    CASE <POINTER>-CURRCODE.
      WHEN 'USD'.
        CLEAR: LS_CELL_COLOR.
        LS_CELL_COLOR-FNAME = 'CURRCODE'.
        LS_CELL_COLOR-COLOR-COL     = '6'.

        APPEND LS_CELL_COLOR TO GS_SCARR-COLOR.
        MODIFY <TABLE> FROM GS_SCARR TRANSPORTING COLOR.
        CLEAR: GS_SCARR-COLOR.

      WHEN 'EUR'.
        CLEAR: LS_CELL_COLOR.
        LS_CELL_COLOR-FNAME = 'CURRCODE'.
        LS_CELL_COLOR-COLOR-COL     = '5'.

        APPEND LS_CELL_COLOR TO GS_SCARR-COLOR.
        MODIFY <TABLE> FROM GS_SCARR TRANSPORTING COLOR.
        CLEAR: GS_SCARR-COLOR.
      WHEN OTHERS.
        CLEAR: LS_CELL_COLOR.
        LS_CELL_COLOR-FNAME = 'CURRCODE'.
        LS_CELL_COLOR-COLOR-COL     = '3'.

        APPEND LS_CELL_COLOR TO GS_SCARR-COLOR.
        MODIFY <TABLE> FROM GS_SCARR TRANSPORTING COLOR.
        CLEAR: GS_SCARR-COLOR.
    ENDCASE.

  ENDLOOP.

  ENDMETHOD.


  METHOD SET_HOTSPOT.

  ENDMETHOD.

  METHOD MAIN.

    " First Way "
*    GO_SCARR = ZHDCL_HALV_FACTORY=>GET_HALV( VALUE #( TYPE = 'HALV' BIND_ITAB = ABAP_TRUE ) ).
    GO_SCARR->DISPLAY( ).

    " Second Way "
*    ZHDCL_HALV_FACTORY=>GET_HALV( VALUE #( TYPE = 'HALV' BIND_ITAB = ABAP_TRUE )
*                     )->BIND( CHANGING ITAB = GT_SCARR
*                     )->DISPLAY( ).

  ENDMETHOD.


ENDCLASS.
