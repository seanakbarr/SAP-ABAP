*&---------------------------------------------------------------------*
*& Report Z44655_W4D2_EXAMB
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z44655_W4D4_EXAMB.

TABLES: VBRK,
        VBRP.

SELECT-OPTIONS: S_FKDAT FOR VBRK-FKDAT OBLIGATORY.
PARAMETERS: P_VKORG TYPE VBRK-VKORG OBLIGATORY DEFAULT '1710'.
SELECT-OPTIONS: S_FKART FOR VBRK-FKART,
                S_KUNRG FOR VBRK-KUNRG.

TYPES: BEGIN OF TS_OUTPUT,
         VKORG TYPE VBRK-VKORG,
         VTEXT TYPE TVKOT-VTEXT,
         KUNRG TYPE VBRK-KUNRG,
         NAME1 TYPE KNA1-NAME1,
         Q22BE TYPE VBRP-FKIMG,
         Q21_2 TYPE VBRP-FKIMG,
         Q21BE TYPE VBRP-FKIMG,
         QTY_T TYPE VBRP-FKIMG,
         VRKME TYPE VBRP-VRKME,
         BOX   TYPE C LENGTH 1,
       END OF TS_OUTPUT.

TYPES: BEGIN OF TS_TEMP,
         VKORG TYPE VBRK-VKORG,
         VTEXT TYPE TVKOT-VTEXT,
         KUNRG TYPE VBRK-KUNRG,
         NAME1 TYPE KNA1-NAME1,
         Q22BE TYPE VBRP-FKIMG,
         Q21_2 TYPE VBRP-FKIMG,
         Q21BE TYPE VBRP-FKIMG,
         QTY_T TYPE VBRP-FKIMG,
         VRKME TYPE VBRP-VRKME,
       END OF TS_TEMP.

TYPES: BEGIN OF TS_SBDOC,
         VBELN TYPE VBRP-VBELN,
         FKDAT TYPE VBRK-FKDAT,
         VKORG TYPE VBRK-VKORG,
         POSNR TYPE VBRP-POSNR,
         MATNR TYPE VBRP-MATNR,
         ARKTX TYPE VBRP-ARKTX,
         FKIMG TYPE VBRP-FKIMG,
         VRKME TYPE VBRP-VRKME,
         KUNRG TYPE VBRK-KUNRG,
         NAME1 TYPE KNA1-NAME1,
         KUNNR TYPE KNA1-KUNNR,
       END OF TS_SBDOC.

TYPES: TT_OUTPUT TYPE STANDARD TABLE OF TS_OUTPUT,
       TT_TEMP   TYPE STANDARD TABLE OF TS_TEMP,
       TT_SBDOC  TYPE STANDARD TABLE OF TS_SBDOC.

DATA : GT_OUTPUT TYPE TT_OUTPUT,
       GS_OUTPUT TYPE TS_OUTPUT,
       GT_TEMP   TYPE TT_TEMP,
       GS_TEMP   TYPE TS_TEMP,
       GT_SBDOC  TYPE TT_SBDOC,
       GS_SBDOC  TYPE TS_SBDOC.

INITIALIZATION.

  PERFORM FRM_SET_DEFAULT_VALUE.

AT SELECTION-SCREEN.

  PERFORM FRM_CHECK_EXISTENCE USING P_VKORG.

START-OF-SELECTION.

  PERFORM FRM_GET_DATA.

  PERFORM FRM_SHOW_ALV.

*&---------------------------------------------------------------------*
*& Form FRM_SET_DEFAULT_VALUE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM FRM_SET_DEFAULT_VALUE.

  DATA LS_FKDAT LIKE LINE OF S_FKDAT.
  LS_FKDAT-SIGN   = 'I'.
  LS_FKDAT-OPTION = 'BT'.
  LS_FKDAT-LOW    = '20200101'.
  LS_FKDAT-HIGH   = SY-DATUM.
  APPEND LS_FKDAT TO S_FKDAT.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form FRM_CHECK_EXISTENCE
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&      --> P_WERKS
*&---------------------------------------------------------------------*
FORM FRM_CHECK_EXISTENCE  USING    PV_VKORG.

  DATA LV_VKORG TYPE VBRK-VKORG.
  SELECT SINGLE VKORG
    FROM TVKO
    INTO LV_VKORG
  WHERE VKORG = PV_VKORG.
  IF SY-SUBRC <> 0.
    MESSAGE 'Plant not found!' TYPE 'E'.
  ENDIF.

ENDFORM.
*&---------------------------------------------------------------------*
*& Form FRM_GET_DATA
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*&
*&
*&---------------------------------------------------------------------*
FORM FRM_GET_DATA.

  SELECT *
    FROM VBRK
   INNER JOIN VBRP
      ON VBRK~VBELN = VBRP~VBELN
    INTO CORRESPONDING FIELDS OF TABLE GT_SBDOC
   WHERE VBRK~FKDAT IN S_FKDAT
     AND VBRK~VKORG = P_VKORG
     AND VBRK~FKART IN S_FKART
     AND VBRK~KUNRG IN S_KUNRG.
  IF SY-SUBRC <> 0.
    MESSAGE 'No data found!' TYPE 'E'.
  ENDIF.

  LOOP AT GT_SBDOC INTO GS_SBDOC.

    CLEAR GS_TEMP.
    MOVE-CORRESPONDING GS_SBDOC TO GS_TEMP.

    IF GS_SBDOC-FKDAT+0(4) >= '2022'.
      GS_TEMP-Q22BE = GS_SBDOC-FKIMG.
    ELSEIF GS_SBDOC-FKDAT+0(4) BETWEEN '2021' AND '2022'.
      GS_TEMP-Q21_2 = GS_SBDOC-FKIMG.
    ELSEIF GS_SBDOC-FKDAT+0(4) <='2021'.
      GS_TEMP-Q21_2 = GS_SBDOC-FKIMG.
    ENDIF.

    GS_TEMP-QTY_T = GS_SBDOC-FKIMG.

    COLLECT GS_TEMP INTO GT_TEMP.
  ENDLOOP.

  DATA LT_TVKOT TYPE STANDARD TABLE OF TVKOT.
  SELECT *
    FROM TVKOT
    INTO CORRESPONDING FIELDS OF TABLE LT_TVKOT
     FOR ALL ENTRIES IN GT_TEMP
   WHERE TVKOT~VKORG = GT_TEMP-VKORG
  AND TVKOT~SPRAS = SY-LANGU.
  IF SY-SUBRC = 0.
    SORT LT_TVKOT BY VKORG.
  ENDIF.

  DATA LT_KNA1 TYPE STANDARD TABLE OF KNA1.
  SELECT *
    FROM KNA1
    INTO CORRESPONDING FIELDS OF TABLE LT_KNA1
     FOR ALL ENTRIES IN GT_TEMP
  WHERE KNA1~KUNNR = GT_TEMP-KUNRG.
  IF SY-SUBRC = 0.
    SORT LT_KNA1.
  ENDIF.

  DATA LS_TVKOT LIKE LINE OF LT_TVKOT.
  DATA LS_KNA1 LIKE LINE OF LT_KNA1.

  LOOP AT GT_TEMP INTO GS_TEMP.
    CLEAR GS_OUTPUT.
    MOVE-CORRESPONDING GS_TEMP TO GS_OUTPUT.
    READ TABLE LT_TVKOT INTO LS_TVKOT WITH KEY VKORG = GS_TEMP-VKORG
                                      BINARY SEARCH.
    IF SY-SUBRC = 0.
      GS_OUTPUT-VTEXT = LS_TVKOT-VTEXT.
      CLEAR LS_TVKOT.
    ENDIF.

    READ TABLE LT_KNA1 INTO LS_KNA1 WITH KEY KUNNR = GS_TEMP-KUNRG
                                    BINARY SEARCH.
    IF SY-SUBRC = 0.
      GS_OUTPUT-NAME1 = LS_KNA1-NAME1.
      CLEAR LS_KNA1.
    ENDIF.

    APPEND GS_OUTPUT TO GT_OUTPUT.

  ENDLOOP.

  CLEAR GT_TEMP[].

ENDFORM.
*&---------------------------------------------------------------------*
*& Form frm_show_alv
*&---------------------------------------------------------------------*
*& text
*&---------------------------------------------------------------------*
*& -->  p1        text
*& <--  p2        text
*&---------------------------------------------------------------------*
FORM FRM_SHOW_ALV .

  DATA LS_LAYOUT TYPE LVC_S_LAYO.
  LS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.
  LS_LAYOUT-ZEBRA      = ABAP_TRUE.
  LS_LAYOUT-BOX_FNAME  = 'BOX'.

  DATA: LT_FCAT TYPE LVC_T_FCAT.
  APPEND VALUE #( FIELDNAME = 'VKORG' REF_FIELD = 'VKORG' REF_TABLE = 'VBRK')                                                  TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'VTEXT' REF_FIELD = 'VTEXT' REF_TABLE = 'TVKOT')                                                 TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'KUNRG' REF_FIELD = 'KUNRG' REF_TABLE = 'VBRK' )                                                 TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'NAME1' REF_FIELD = 'NAME1' REF_TABLE = 'KNA1' )                                                 TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'Q22BE' COLTEXT = 'Quantity 2022 And Beyond' REF_FIELD = 'FKIMG' REF_TABLE = 'VBRP' )            TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'Q21_2' COLTEXT = 'Quantity 2021-2022' REF_FIELD = 'FKIMG' REF_TABLE = 'VBRP' )                  TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'Q21BE' COLTEXT = 'Quantity 2021 And Before' REF_FIELD = 'FKIMG' REF_TABLE = 'VBRP' )            TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'QTY_T' COLTEXT = 'Quantity Total' REF_FIELD = 'FKIMG' REF_TABLE = 'VBRP' )                      TO LT_FCAT.
  APPEND VALUE #( FIELDNAME = 'VRKME' REF_FIELD = 'VRKME' REF_TABLE = 'VBRP' )                                                 TO LT_FCAT.

  DATA LT_EVENTS TYPE SLIS_T_EVENT.
  DATA LS_EVENTS LIKE LINE OF LT_EVENTS.

  LS_EVENTS-NAME = SLIS_EV_PF_STATUS_SET.
  LS_EVENTS-FORM = 'FRM_SET_PF_STATUS'.
  APPEND LS_EVENTS TO LT_EVENTS.
  CLEAR LS_EVENTS.

  LS_EVENTS-NAME = SLIS_EV_USER_COMMAND.
  LS_EVENTS-FORM = 'FRM_USER_COMMAND'.
  APPEND LS_EVENTS TO LT_EVENTS.
  CLEAR LS_EVENTS.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      I_CALLBACK_PROGRAM = SY-REPID
      I_GRID_TITLE       = 'Sales Billing Information for [Sean Akbar Ryanto]'
      IS_LAYOUT_LVC      = LS_LAYOUT
      IT_FIELDCAT_LVC    = LT_FCAT
      I_DEFAULT          = 'X'
      I_SAVE             = 'A'
      IT_EVENTS          = LT_EVENTS
    TABLES
      T_OUTTAB           = GT_OUTPUT
    EXCEPTIONS
      PROGRAM_ERROR      = 1
      OTHERS             = 2.
  IF SY-SUBRC <> 0.
    MESSAGE ID SY-MSGID
       TYPE SY-MSGTY
     NUMBER SY-MSGNO
       WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
  ENDIF.

ENDFORM.

FORM FRM_SET_PF_STATUS USING PV_EXCL_TAB TYPE KKBLO_T_EXTAB.
  SET PF-STATUS 'STANDARD_FULLSCREEN'.
ENDFORM.

FORM FRM_USER_COMMAND USING PV_UCOMM       LIKE SY-UCOMM
                            PS_FIELD_INFO  TYPE SLIS_SELFIELD.
  CASE PV_UCOMM.
    WHEN '&ZPOPUP'.
      DATA: LT_OUTPUT2 TYPE TT_SBDOC.
      DATA: LS_OUTPUT2 LIKE LINE OF LT_OUTPUT2.

*      GS_OUTPUT-BOX = ABAP_TRUE.

      READ TABLE GT_OUTPUT INTO GS_OUTPUT WITH KEY BOX = ABAP_TRUE.
      IF SY-SUBRC = 0.
        LOOP AT GT_SBDOC INTO GS_SBDOC WHERE VKORG = GS_OUTPUT-VKORG
                                         AND KUNRG = GS_OUTPUT-KUNRG
                                         AND VRKME = GS_OUTPUT-VRKME.

          APPEND GS_SBDOC TO LT_OUTPUT2.

        ENDLOOP.

        DATA LS_LAYOUT TYPE LVC_S_LAYO.
        LS_LAYOUT-CWIDTH_OPT  = ABAP_TRUE.
        LS_LAYOUT-ZEBRA      = ABAP_TRUE.

        DATA LT_FCAT TYPE LVC_T_FCAT.
        APPEND VALUE #( FIELDNAME = 'VBELN' REF_FIELD = 'VBELN' REF_TABLE = 'VBRP' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'FKDAT' REF_FIELD = 'FKDAT' REF_TABLE = 'VBRK' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'VKORG' REF_FIELD = 'VKORG' REF_TABLE = 'VBRK' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'POSNR' REF_FIELD = 'POSNR' REF_TABLE = 'VBRP' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'MATNR' REF_FIELD = 'MATNR' REF_TABLE = 'VBRP' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'ARKTX' REF_FIELD = 'ARKTX' REF_TABLE = 'VBRP' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'FKIMG' REF_FIELD = 'FKIMG' REF_TABLE = 'VBRP' )                   TO LT_FCAT.
        APPEND VALUE #( FIELDNAME = 'VRKME' REF_FIELD = 'VRKME' REF_TABLE = 'VBRP' )                   TO LT_FCAT.

        CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
          EXPORTING
            I_GRID_TITLE    = 'Sales Order Details'
            IS_LAYOUT_LVC   = LS_LAYOUT
            IT_FIELDCAT_LVC = LT_FCAT
            I_SAVE          = 'A'
            I_DEFAULT       = 'X'
          TABLES
            T_OUTTAB        = LT_OUTPUT2
          EXCEPTIONS
            PROGRAM_ERROR   = 1
            OTHERS          = 2.
        IF SY-SUBRC <> 0.
          MESSAGE ID SY-MSGID
                TYPE SY-MSGTY
              NUMBER SY-MSGNO
                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.
      ENDIF.
    WHEN OTHERS.
  ENDCASE.
ENDFORM.
