*&---------------------------------------------------------------------*
*& Report Z44655_W4D5_EXAMA
*&---------------------------------------------------------------------*
*&
*&---------------------------------------------------------------------*
REPORT Z44655_W5D2_TEST.

TABLES: BKPF,
        BSIK.

PARAMETERS: P_BUKRS TYPE BKPF-BUKRS OBLIGATORY DEFAULT '1710',
            P_GJAHR TYPE BKPF-GJAHR OBLIGATORY DEFAULT '2021',
            P_LDGRP TYPE BKPF-LDGRP.

SELECT-OPTIONS: S_BUDAT FOR BKPF-BUDAT,
                S_CPUDT FOR BKPF-CPUDT,
                S_BLART FOR BKPF-BLART,
                S_BELNR FOR BKPF-BELNR,
                S_USNAM FOR BKPF-USNAM,
                S_LIFNR FOR BSIK-LIFNR.

DATA GT_OUTPUT1 TYPE STANDARD TABLE OF ZSAV_OUTPUT1_44655.
DATA GS_OUTPUT1 TYPE ZSAV_OUTPUT1_44655.

DATA GT_OUTPUT2 TYPE STANDARD TABLE OF ZSAV_DETAILS_44655.
DATA GS_OUTPUT2 TYPE ZSAV_DETAILS_44655.

INITIALIZATION.

  PERFORM FRM_SET_DEFAULT_VALUE.

AT SELECTION-SCREEN.

  PERFORM FRM_CHECK_EXISTENCE USING P_BUKRS.

START-OF-SELECTION.

  PERFORM FRM_GET_DATA.

  PERFORM FRM_SHOW_ALV.

FORM FRM_SET_DEFAULT_VALUE.

  DATA LS_BUDAT LIKE LINE OF S_BUDAT.
  LS_BUDAT-SIGN   = 'I'.
  LS_BUDAT-OPTION = 'BT'.
  LS_BUDAT-LOW    = '20210101'.
  LS_BUDAT-HIGH   = SY-DATUM.
  APPEND LS_BUDAT TO S_BUDAT.

ENDFORM.

FORM FRM_CHECK_EXISTENCE USING PV_BUKRS.

  DATA LV_BUKRS TYPE BKPF-BUKRS.
  SELECT SINGLE BUKRS
    FROM T001
    INTO LV_BUKRS
  WHERE BUKRS = PV_BUKRS.
  IF SY-SUBRC <> 0.
    MESSAGE 'Data not found!' TYPE 'E'.
  ENDIF.

ENDFORM.

FORM FRM_GET_DATA.

  SELECT BKPF~BELNR
         BKPF~BLART
         BKPF~LDGRP
         BKPF~BLDAT
         BKPF~BUDAT
         BKPF~STGRD
         BKPF~STBLG
         BKPF~BKTXT
         BKPF~USNAM
    FROM BKPF
   INNER JOIN BSIK
      ON BSIK~BUKRS = BKPF~BUKRS
     AND BSIK~BELNR = BKPF~BELNR
     AND BSIK~GJAHR = BKPF~GJAHR
    INTO CORRESPONDING FIELDS OF TABLE GT_OUTPUT1
   WHERE BKPF~BUKRS = P_BUKRS
     AND BKPF~GJAHR = P_GJAHR
     AND BKPF~LDGRP = P_LDGRP
     AND BKPF~BUDAT IN S_BUDAT
     AND BKPF~CPUDT IN S_CPUDT
     AND BKPF~BLART IN S_BLART
     AND BKPF~BELNR IN S_BELNR
     AND BKPF~USNAM IN S_USNAM
     AND BSIK~LIFNR IN S_LIFNR.
  IF SY-SUBRC <> 0.
    MESSAGE 'NO DATA FOUND!' TYPE 'E'.
  ENDIF.

  SELECT BUKRS
         BELNR
         GJAHR
         BUZEI
         SHKZG
         DMBTR
         HKONT
         FKBER
         KOSTL
         AUFNR
         LIFNR
         WAERS
    FROM BSIK
    INTO CORRESPONDING FIELDS OF TABLE GT_OUTPUT2
    FOR ALL ENTRIES IN GT_OUTPUT1
   WHERE BELNR = GT_OUTPUT1-BELNR.



ENDFORM.

FORM FRM_SHOW_ALV .

  DATA GT_FCAT TYPE LVC_T_FCAT.
  CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
    EXPORTING
      I_STRUCTURE_NAME       = 'ZSAV_OUTPUT1_44655'
    CHANGING
      CT_FIELDCAT            = GT_FCAT
    EXCEPTIONS
      INCONSISTENT_INTERFACE = 1
      PROGRAM_ERROR          = 2
      OTHERS                 = 3.
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

  GT_FCAT[ FIELDNAME = 'BELNR' ]-HOTSPOT = ABAP_TRUE.

  DATA GS_LAYOUT TYPE LVC_S_LAYO.
  GS_LAYOUT-CWIDTH_OPT = ABAP_TRUE.
  GS_LAYOUT-ZEBRA      = ABAP_TRUE.
  GS_LAYOUT-BOX_FNAME = 'ZBOX'.

  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
    EXPORTING
      I_CALLBACK_PROGRAM       = SY-REPID
      I_GRID_TITLE             = 'Accounting Voucher Printing for [Sean Akbar Ryanto]'
      I_CALLBACK_PF_STATUS_SET = 'FRM_SET_PF_STATUS'
      I_CALLBACK_USER_COMMAND  = 'FRM_USER_COMMAND'
      IS_LAYOUT_LVC            = GS_LAYOUT
      IT_FIELDCAT_LVC          = GT_FCAT
    TABLES
      T_OUTTAB                 = GT_OUTPUT1
    EXCEPTIONS
      PROGRAM_ERROR            = 1
      OTHERS                   = 2.
  IF SY-SUBRC <> 0.
*   Implement suitable error handling here
  ENDIF.

ENDFORM.

FORM FRM_SET_PF_STATUS USING PV_EXCL_TAB TYPE KKBLO_T_EXTAB.
  SET PF-STATUS 'STANDARD_FULLSCREEN'.
ENDFORM.

FORM FRM_USER_COMMAND  USING PV_UCOMM       LIKE SY-UCOMM
                             PS_FIELD_INFO  TYPE SLIS_SELFIELD.

  CASE PV_UCOMM.
    WHEN '&IC1'.
      IF PS_FIELD_INFO-SEL_TAB_FIELD = '1-BELNR'.
        SET PARAMETER ID 'BLN' FIELD PS_FIELD_INFO-VALUE.
        CALL TRANSACTION 'FB03' AND SKIP FIRST SCREEN.
      ELSE.
        DATA: LT_OUTPUT2 TYPE STANDARD TABLE OF ZSAV_DETAILS_44655.
        DATA: LS_OUTPUT2 LIKE LINE OF LT_OUTPUT2.

        READ TABLE GT_OUTPUT1 INTO GS_OUTPUT1 INDEX PS_FIELD_INFO-TABINDEX.
        IF SY-SUBRC <> 0.
          RETURN.
        ENDIF.

        LOOP AT GT_OUTPUT2 INTO GS_OUTPUT2 WHERE BELNR = GS_OUTPUT1-BELNR.

          APPEND GS_OUTPUT2 TO LT_OUTPUT2.

        ENDLOOP.

        DATA LS_LAYOUT TYPE LVC_S_LAYO.
        LS_LAYOUT-CWIDTH_OPT  = ABAP_TRUE.
        LS_LAYOUT-ZEBRA      = ABAP_TRUE.

        DATA LT_FCAT TYPE LVC_T_FCAT.
        CALL FUNCTION 'LVC_FIELDCATALOG_MERGE'
          EXPORTING
            I_STRUCTURE_NAME       = 'ZSAV_DETAILS_44655'
          CHANGING
            CT_FIELDCAT            = LT_FCAT
          EXCEPTIONS
            INCONSISTENT_INTERFACE = 1
            PROGRAM_ERROR          = 2
            OTHERS                 = 3.
        IF SY-SUBRC <> 0.
*         Implement
        ENDIF.

        CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY_LVC'
          EXPORTING
            I_GRID_TITLE    = 'Accounting Voucher Details'
            IS_LAYOUT_LVC   = LS_LAYOUT
            IT_FIELDCAT_LVC = LT_FCAT
            I_SAVE          = 'A'
            I_DEFAULT       = 'X'
          TABLES
            T_OUTTAB        = LT_OUTPUT2
          EXCEPTIONS
            PROGRAM_ERROR   = 1
            OTHERS          = 2.
        IF SY-SUBRC <> 0.
          MESSAGE ID SY-MSGID
                TYPE SY-MSGTY
              NUMBER SY-MSGNO
                WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
        ENDIF.
      ENDIF.
    WHEN '&ZPRINT'.
      DATA LS_CONTROL_PARAMETERS TYPE SSFCTRLOP.
      LS_CONTROL_PARAMETERS-NO_DIALOG = ABAP_TRUE.
      LS_CONTROL_PARAMETERS-PREVIEW   = ABAP_TRUE.
      LS_CONTROL_PARAMETERS-NO_OPEN = ABAP_TRUE.
      LS_CONTROL_PARAMETERS-NO_CLOSE = ABAP_TRUE.

      DATA LS_OUTPUT_OPTIONS TYPE SSFCOMPOP.

      DATA LS_JOB_OUTPUT_INFO TYPE SSFCRESCL.

      DATA GV_FORMNAME TYPE TDSFNAME.
      GV_FORMNAME = 'ZSF44655_W5D2_EXAMA'.

      DATA GV_FNAME TYPE RS38L_FNAM.
      CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
        EXPORTING
          FORMNAME           = GV_FORMNAME
        IMPORTING
          FM_NAME            = GV_FNAME
        EXCEPTIONS
          NO_FORM            = 1
          NO_FUNCTION_MODULE = 2
          OTHERS             = 3.
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.

      DATA LS_OUTPUT1 LIKE LINE OF GT_OUTPUT1.
*      DATA LS_SODOC LIKE LINE OF GT_SODOC.
*
*      DATA LT_SF_SODOC TYPE ZTTSO_SODOC_44655.
*      DATA LS_SF_SODOC LIKE LINE OF LT_SF_SODOC.
*
**      DATA LS_SF_OUTPUT1 TYPE ZSSO_OUTPUT1_44655.
*
      CALL FUNCTION 'SSF_OPEN'
       EXPORTING
         OUTPUT_OPTIONS           = LS_OUTPUT_OPTIONS
         CONTROL_PARAMETERS       = LS_CONTROL_PARAMETERS
       EXCEPTIONS
         FORMATTING_ERROR         = 1
         INTERNAL_ERROR           = 2
         SEND_ERROR               = 3
         USER_CANCELED            = 4
         OTHERS                   = 5
                .
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.
*
*      LOOP AT GT_OUTPUT1 INTO LS_OUTPUT1 WHERE ZBOX = ABAP_TRUE.
*
**        LS_SF_OUTPUT1-VBELN = LS_OUTPUT1-VBELN.
*
*        LOOP AT GT_SODOC INTO LS_SODOC WHERE VBELN = LS_OUTPUT1-VBELN.
*          MOVE-CORRESPONDING LS_SODOC TO LS_SF_SODOC.
*          LS_SF_SODOC-VBELN = LS_OUTPUT1-VBELN.
*
*          APPEND LS_SF_SODOC TO LT_SF_SODOC.
*
*        ENDLOOP.
*
*        CALL FUNCTION GV_FNAME
*          EXPORTING
*            CONTROL_PARAMETERS = LS_CONTROL_PARAMETERS
*            USER_SETTINGS      = 'X'
*            IS_OUTPUT1          = LS_OUTPUT1
*          IMPORTING
*            JOB_OUTPUT_INFO    = LS_JOB_OUTPUT_INFO
*          TABLES
*            IT_SODOC           = LT_SF_SODOC
*          EXCEPTIONS
*            FORMATTING_ERROR   = 1
*            INTERNAL_ERROR     = 2
*            SEND_ERROR         = 3
*            USER_CANCELED      = 4
*            OTHERS             = 5.
*        IF SY-SUBRC <> 0.
** Implement suitable error handling here
*        ENDIF.
*
*      ENDLOOP.
*
*      CLEAR LS_OUTPUT1.
*      CLEAR LT_SF_SODOC.

      CALL FUNCTION 'SSF_CLOSE'
       IMPORTING
         JOB_OUTPUT_INFO        = LS_JOB_OUTPUT_INFO
       EXCEPTIONS
         FORMATTING_ERROR       = 1
         INTERNAL_ERROR         = 2
         SEND_ERROR             = 3
         OTHERS                 = 4
                .
      IF SY-SUBRC <> 0.
* Implement suitable error handling here
      ENDIF.
    WHEN OTHERS.
  ENDCASE.

ENDFORM.
